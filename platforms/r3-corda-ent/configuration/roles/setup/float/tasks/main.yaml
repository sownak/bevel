# This role creates the the value file for float chart and pushes it to the git repository

#TODO: CHECK for the previous entity to be running/completed

# This task will will create the value file for float
- name: Create value file for float
  include_role:
    name: helm_component
  vars:
    component_name: "{{ peer.firewall.float.name }}"
    type: float
    name: "{{ org.name | lower }}"
    corda_service_version: "firewall-{{ org.version }}"
    charts_dir: "{{ org.gitops.chart_source }}"
    values_dir: "{{playbook_dir}}/../../../{{ org.gitops.release_dir }}"

# Git Push : Pushes the above generated files to git directory 
- name: Git Push
  include_role: 
    name: "{{ playbook_dir }}/../../shared/configuration/roles/git_push"
  vars:
    GIT_DIR: "{{ playbook_dir }}/../../../"
    GIT_REPO: "{{ org.gitops.git_push_url }}"
    GIT_USERNAME: "{{ org.gitops.username }}"
    GIT_EMAIL: "{{ org.gitops.email }}"
    GIT_PASSWORD: "{{ org.gitops.password }}"
    GIT_BRANCH: "{{ org.gitops.branch }}"
    GIT_RESET_PATH: "platforms/r3-corda-ent/configuration"
    msg: "[ci skip] Pushing float files"

# Wait till the float is running
- name: "Waiting for float pod to come up"
  include_role:
    name: "{{ playbook_dir }}/../../shared/configuration/roles/check/helm_component"
  vars:
    component_type: "Pod"
    namespace: "{{ component_ns }}"
    component_name: "{{ peer.firewall.float.name }}"
    kubernetes: "{{ org.k8s }}"
    label_selectors:
      - app = {{ component_name }}

############################################################################################
# This task copies network-parameter file into the float pod 
- name: Copy the network-parameter file into the float pod 
  shell: |
    export FLOAT_POD=$(KUBECONFIG={{ kubernetes.config_file }} kubectl get po -n {{ component_ns }} -l app={{ peer.firewall.float.name }} | grep {{ peer.firewall.float.name }}  | awk '{print $1}')
    export PEER_POD=$(KUBECONFIG={{ kubernetes.config_file }} kubectl get po -n {{ component_ns }} -l app={{ peer.name }} | grep {{ peer.name }} | awk '{print $1}')
    KUBECONFIG={{ kubernetes.config_file }} kubectl cp {{ component_ns }}/${PEER_POD}:base/network-parameters ./build/np-{{ peer.name }}
    KUBECONFIG={{ kubernetes.config_file }} kubectl cp ./build/np-{{ peer.name }} {{ component_ns }}/${FLOAT_POD}:base/network-parameters
