# This role creates the the value file for pki-generator chart and pushes it to the git repository

# Check if pki-generator is already run
- name: "Checking if pki-generator job is already completed"
  include_role:
    name: "{{ playbook_dir }}/../../shared/configuration/roles/check/helm_component"
  vars:
    job_title: "{{ org.name | lower }}-generate-pki"
    component_type: "OneTimeJob"
    component_name: "{{ org.name | lower }}-generate-pki"

- name: "Set Variable generate_pki"
  set_fact:
    generate_pki: "{{ result }}"

# This task will loop over the network.yaml to fetch the cenm details
- name: Create value file for pki generator
  include_role:
    name: helm_component
  vars:
    component_name: "{{ org.name | lower }}pkigenerator"
    type: "pki-generator"
    values_dir: "{{playbook_dir}}/../../../{{ gitops.release_dir }}"
    name: "{{ org.name | lower }}"
    signerName: "{{ services.signer.name }}"
    idmanName: "{{ services.idman.name }}"
    networkmapName: "{{ services.networkmap.name }}"
    notaryName: "{{ services.notary.name }}"
    charts_dir: "{{ gitops.chart_source }}"
    git_url: "{{ gitops.git_ssh }}"
    git_branch: "{{ gitops.branch }}"
    docker_url: "corda/enterprise-pkitool"
    docker_tag: "1.2-zulu-openjdk8u242"
    init_container_name: "index.docker.io/hyperledgerlabs/alpine-utils:1.0"
    vault_address: "{{ vault.url }}"
    authpath: "cordaent{{ org.name | lower }}"
    certsecretprefix: "secret/{{ org.name | lower }}"
    username: "signer"
    password: "signerP"
    idman_ip: "{{ services.idman.name | lower }}.{{ org.external_url_suffix }}"
    idman_port: 8443
    idman_host: "{{ services.idman.name }}.{{ component_ns }}"
    networkmap_host: "{{ services.networkmap.name }}.{{ component_ns }}"
    tls_crl_signer_subject: "{{ services.signer.subject }}"
    tls_crl_signer_issuer: "{{ services.idman.crlissuer_subject }}"
    corda_root_ca_subject: "{{ org.subject }}"
    subordinate_ca_subject: "{{ org.subordinate_ca_subject }}"
    idman_ca_subject: "{{ services.idman.subject }}"
    networkmap_ca_subject: "{{ services.networkmap.subject }}"
  when: generate_pki.resources|length == 0

# Git Push : Pushes the above generated files to git directory 
- name: Git Push
  include_role: 
    name: "{{ playbook_dir }}/../../shared/configuration/roles/git_push"
  vars:
    GIT_DIR: "{{ playbook_dir }}/../../../"
    GIT_REPO: "{{ gitops.git_push_url }}"
    GIT_USERNAME: "{{ gitops.username }}"
    GIT_EMAIL: "{{ gitops.email }}"
    GIT_PASSWORD: "{{ gitops.password }}"
    GIT_BRANCH: "{{ gitops.branch }}"
    GIT_RESET_PATH: "platforms/r3-corda-ent/configuration"
    msg: "[ci skip] Pushing pki-generator files"
  when: generate_pki.resources|length == 0
