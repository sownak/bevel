# https://docs.cenm.r3.com/pki-tool.html#certificate-templates
# defaultPassword = "password"

keyStores = {
    "identity-manager-key-store" = {
        type = LOCAL
        file = "./DATA/signer/identity-manager-key-store.jks"
        password = "password"
    }
    "network-map-key-store" = {
        type = LOCAL
        file = "./DATA/signer/network-map-key-store.jks"
        password = "password"
    }
    "subordinate-key-store" = {
        type = LOCAL
        file = "./DATA/root/subordinate-key-store.jks"
        password = "password"
    }
    "root-key-store" = {
        type = LOCAL
        file = "./DATA/root/root-key-store.jks"
        password = "password"
    }
    "tls-crl-signer-key-store" = {
        type = LOCAL
        file = "./DATA/root/tls-crl-signer-key-store.jks"
        password = "password"
    }
    "corda-ssl-network-map-keys" = {
        type = LOCAL
        file = "./DATA/networkmap/corda-ssl-network-map-keys.jks"
        password = "password"
    },
    "corda-ssl-identity-manager-keys" = {
        type = LOCAL
        file = "./DATA/idman/certs/corda-ssl-identity-manager-keys.jks"
        password = "password"
    },
    "corda-ssl-signer-keys" = {
        type = LOCAL
        file = "./DATA/signer/corda-ssl-signer-keys.jks"
        password = "password"
    },
    "corda-ssl-root-keys" = {
        type = LOCAL
        file = "./DATA/root/corda-ssl-root-keys.jks"
        password = "password"
    }    
}
certificatesStores = {
    "network-root-trust-store" = {
        file = "./DATA/root/network-root-truststore.jks"
        password = "password"
    }
    "corda-ssl-trust-store" = {
        file = "./DATA/root/corda-ssl-trust-store.jks"
        password = "password"
    }
}
certificates = {
    "tlscrlsigner" = {
        key = {
            type = LOCAL
            includeIn = ["tls-crl-signer-key-store"]
            algorithm = "ECDSA_SECP256R1_SHA256"
            password = "password"
        }
        isSelfSigned = true
        keyUsages = [CRL_SIGN]
        keyPurposes = [SERVER_AUTH, CLIENT_AUTH]
        validDays = 7300
        issuesCertificates = true
        subject = {{ .Values.pki.certificates.tlscrlsigner.subject | quote }}
        includeIn = ["network-root-trust-store"]
        crl = {
            crlDistributionUrl = "https://{{ required "Public IP address required (add --set idmanPublicIP=x.x.x.x to your helm command)" .Values.idmanPublicIP }}:{{ .Values.idmanPort }}/certificate-revocation-list/tls"
            indirectIssuer = true
            issuer = {{ .Values.pki.certificates.tlscrlsigner.crl.issuer | quote }}
            file = "./DATA/idman/crls/tls.crl"
        }
    },
    "cordarootca" = {
        key = {
            type = LOCAL
            includeIn = ["root-key-store"]
            algorithm = "ECDSA_SECP256R1_SHA256"
            password = "password"
        }
        isSelfSigned = true
        keyUsages = [DIGITAL_SIGNATURE, KEY_CERT_SIGN, CRL_SIGN]
        keyPurposes = [SERVER_AUTH, CLIENT_AUTH]
        validDays = 7300
        issuesCertificates = true
        subject = {{ .Values.pki.certificates.cordarootca.subject | quote }}
        includeIn = ["network-root-trust-store"]
        crl = {
            crlDistributionUrl = "https://{{ required "Public IP address required (add --set idmanPublicIP=x.x.x.x to your helm command)" .Values.idmanPublicIP }}:{{ .Values.idmanPort }}/certificate-revocation-list/root"
            file = "./DATA/idman/crls/root.crl"
        }
    },
    "subordinateca" = {
        key = {
            type = LOCAL
            includeIn = ["subordinate-key-store"]
            algorithm = "ECDSA_SECP256R1_SHA256"
            password = "password"
        }
        isSelfSigned = false
        signedBy = "cordarootca"
        keyUsages = [DIGITAL_SIGNATURE, KEY_CERT_SIGN, CRL_SIGN]
        keyPurposes = [SERVER_AUTH, CLIENT_AUTH]
        validDays = 7300
        issuesCertificates = true
        subject = {{ .Values.pki.certificates.subordinateca.subject | quote }}
        crl = {
            crlDistributionUrl = "https://{{ required "Public IP address required (add --set idmanPublicIP=x.x.x.x to your helm command)" .Values.idmanPublicIP }}:{{ .Values.idmanPort }}/certificate-revocation-list/subordinate"
            file = "./DATA/idman/crls/subordinate.crl"
        }
    },
    "identitymanagerca" = {
        key = {
            type = LOCAL
            includeIn = ["identity-manager-key-store"]
            algorithm = "ECDSA_SECP256R1_SHA256"
            password = "password"
        }
        isSelfSigned = false
        signedBy = "subordinateca"
        keyUsages = [DIGITAL_SIGNATURE, KEY_CERT_SIGN, CRL_SIGN]
        keyPurposes = [SERVER_AUTH, CLIENT_AUTH]
        validDays = 7300
        role = DOORMAN_CA
        issuesCertificates = true
        subject = {{ .Values.pki.certificates.identitymanagerca.subject | quote }}
    },
    "networkmap" = {
        key = {
            type = LOCAL
            includeIn = ["network-map-key-store"]
            algorithm = "ECDSA_SECP256R1_SHA256"
            password = "password"
        }
        isSelfSigned = false
        signedBy = "subordinateca"
        keyUsages = [DIGITAL_SIGNATURE, KEY_CERT_SIGN, CRL_SIGN]
        keyPurposes = [SERVER_AUTH, CLIENT_AUTH]
        validDays = 7300
        role = NETWORK_MAP
        issuesCertificates = false
        subject = {{ .Values.pki.certificates.networkmap.subject | quote }}
    },
    "::CORDA_SSL_ROOT" {
        key = {
            type = LOCAL
            includeIn = ["corda-ssl-identity-manager-keys"]
            algorithm = "ECDSA_SECP256R1_SHA256"
            password = "password"
        }
        crl = {
            crlDistributionUrl = "https://{{ required "Public IP address required (add --set idmanPublicIP=x.x.x.x to your helm command)" .Values.idmanPublicIP }}:{{ .Values.idmanPort }}/certificate-revocation-list/ssl"
            file = "./DATA/idman/crls/ssl.crl"
        }
    },
    "::CORDA_SSL_IDENTITY_MANAGER",
    "::CORDA_SSL_NETWORK_MAP",
    "::CORDA_SSL_SIGNER"    
}
