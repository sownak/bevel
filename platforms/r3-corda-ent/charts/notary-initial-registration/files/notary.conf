networkServices {
    doormanURL="{{ .Values.networkServices.doormanURL }}"
    networkMapURL="{{ .Values.networkServices.networkMapURL }}"
}
dataSourceProperties {
    dataSource {
        password = "{{ .Values.dataSourceProperties.dataSource.password }}"
        url = "{{ .Values.dataSourceProperties.dataSource.url }}"
        user = "{{ .Values.dataSourceProperties.dataSource.user }}"
    }
    dataSourceClassName = "{{ .Values.dataSourceProperties.dataSourceClassName }}"
}
notary {
    validating = "{{ .Values.nodeConf.notary.validating }}"
}

devMode = {{ .Values.nodeConf.devMode }}
emailAddress : "{{ .Values.nodeConf.email }}"
myLegalName : "{{ .Values.nodeConf.legalName }}"
p2pAddress : "{{ .Values.nodeConf.p2p.url }}:{{ .Values.service.p2pPort }}"
additionalP2PAddresses : ["{{ .Values.nodeConf.ambassador.p2pAddress }}"]
detectPublicIp : false
rpcSettings {
    address="{{ .Values.service.rpc.address }}:{{ .Values.service.rpc.addressPort }}"
    adminAddress="{{ .Values.service.rpc.admin.address }}:{{ .Values.service.rpc.admin.addressPort }}"
    standAloneBroker="{{ .Values.service.rpc.standAloneBroker }}"
    useSsl="{{ .Values.service.rpc.useSSL }}"
}

rpcUsers=[
    {
        username="{{ .Values.service.rpc.users.username }}"
        password="{{ .Values.service.rpc.users.password }}"
        permissions=[
            ALL
        ]
    }
]
