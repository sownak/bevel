##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

apiVersion: v1
kind: Service
metadata:
  namespace: {{ .Values.metadata.namespace }}
  annotations:
    app: consortiumchain
    version: '1'
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: {{ .Values.node.name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }} 
    {{- include "labels.custom" . | nindent 2 }}
    {{- if $.Values.labels }}
    {{- range $key, $value := $.Values.labels.service }}
    {{- range $k, $v := $value }}
    {{ $k }}: {{ $v | quote }}
    {{- end }}
    {{- end }}
    {{- end }}
  name: {{ .Values.node.name }}
spec:
  type: {{ .Values.node.servicetype }}
  ports:
  - name: json-rpc
    protocol: TCP
    port: {{ .Values.node.ports.rpc }}
    targetPort: json-rpc
  - name: ws
    protocol: TCP
    port: {{ .Values.node.ports.ws }}
    targetPort: ws
  - name: rlpx
    protocol: TCP
    port: {{ .Values.node.ports.p2p }}
    targetPort: rlpx
   {{- if $.Values.metrics.enabled }}
  - name: metrics
    protocol: TCP
    port: {{ template "metrics_port" . }}
    targetPort: {{ template "metrics_port" . }}
   {{- end }} 
  selector:
    service.rpc: {{ .Values.node.name }}
{{- if eq $.Values.proxy.provider "ambassador" }}
## Listeners for rlpx (p2p) ports
---
apiVersion: getambassador.io/v3alpha1
kind: Listener
metadata:
  name: {{ .Values.node.name }}-rlpx
  namespace: {{ .Values.metadata.namespace }}
spec:
  port: {{ .Values.proxy.p2p }}
  protocol: TCP
  securityModel: XFP
  hostBinding:
    namespace:
      from: SELF
## Mapping for rpc
---
apiVersion: getambassador.io/v3alpha1
kind: Mapping
metadata:
  name: {{ .Values.node.name }}-json-rpc
  namespace: {{ .Values.metadata.namespace }}
spec:
  hostname: '{{ .Values.node.name }}rpc.{{ .Values.proxy.external_url }}'
  prefix: /
  service: http://{{ .Values.node.name }}.{{ .Values.metadata.namespace }}:{{ .Values.node.ports.rpc }}
## TCPMapping for rlpx
---
apiVersion: getambassador.io/v3alpha1
kind: TCPMapping
metadata:
  name: {{ .Values.node.name }}-rlpx
  namespace: {{ .Values.metadata.namespace }}
spec:
  port: {{ .Values.proxy.p2p }}
  service: {{ .Values.node.name }}.{{ .Values.metadata.namespace }}:{{ .Values.node.ports.p2p }}
{{- end }}
