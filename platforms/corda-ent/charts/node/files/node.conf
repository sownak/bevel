myLegalName: "{{ .Values.legalName }}"
emailAddress: "{{ .Values.emailAddress }}"
p2pAddress: "{{ .Values.service.p2pAddress }}:{{ .Values.service.p2pPort }}"
networkServices: {
  doormanURL: "{{ .Values.networkServices.doormanURL }}",
  networkMapURL: "{{ .Values.networkServices.networkMapURL }}"
}
crlCheckSoftFail: {{ .Values.crlCheckSoftFail }}
{{- if ne .Values.tlsCertCrlDistPoint "" }}
tlsCertCrlDistPoint:  "{{ .Values.tlsCertCrlDistPoint }}",
tlsCertCrlIssuer: "{{ .Values.tlsCertCrlIssuer }}"
{{- end }}
devMode: {{ .Values.devMode }}
{{- if .Values.ssh.enabled }}
sshd:  {
  port: {{ .Values.ssh.sshdPort }}
}
{{- end }}
rpcSettings: {
  address: "0.0.0.0:{{ .Values.rpc.port }}",
  adminAddress: "0.0.0.0:{{ .Values.rpc.adminPort }}"
}
rpcUsers: [
{{- range $user := .Values.rpc.users }}
  {
    user: "{{ $user.name }}",
    password: "{{ $user.password }}",
    permissions: [
      "{{ $user.permissions }}"
    ]
  }
{{- end }}
]
{{- if .Values.monitoring.enabled }}
jmxMonitoringHttpPort: {{ .Values.monitoring.port }}
{{- end }}

trustStorePassword: "password"
keyStorePassword : "password"
detectPublicIp: false
messagingServerAddress: "0.0.0.0:{{ .Values.service.p2pPort }}"
messagingServerExternal: false
enterpriseConfiguration: {
  externalBridge: true
}
{{- if .Values.allowDevCorDapps.enabled }}
cordappSignerKeyFingerprintBlacklist: [
]
{{- end }}
dataSourceProperties: {
  dataSourceClassName: "{{ .Values.dataSource.dataSourceClassName }}",
  dataSource.url: "{{ .Values.dataSource.url }}",
  dataSource.user: "{{ .Values.dataSource.user }}",
  dataSource.password: "{{ .Values.dataSource.password }}"
}
database = {
{{- if eq .Values.dataSource.dataSourceClassName "oracle.jdbc.pool.OracleDataSource" }}
    transactionIsolationLevel = READ_COMMITTED
    schema = xe
{{- end}}
    runMigration = true
}
