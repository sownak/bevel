##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

##############################################################################################
# This task is the nested task for main.yaml which helps to create the channels_join files
##############################################################################################

---
# Check or wait for the Orderer pod
- name: "Check orderer pod is up"
  include_tasks: orderercheck.yaml
  vars:
    orderer_namespace: "{{ ordererorg.name | lower }}-net"
    orderer_kubeconfig: "{{ ordererorg.k8s.config_file }}"
    orderer_context: "{{ ordererorg.k8s.context }}"
  loop: "{{ network['organizations'] }}"
  loop_control:
    loop_var: ordererorg
  when: ordererorg.type == 'orderer'

# Check or wait for the peer
- name: "Check peer pod is up"
  include_tasks: peercheck.yaml
  vars:
    org_query: "organizations[?type=='peer']"
  loop: "{{ network | json_query(org_query) }}"
  loop_control:
    loop_var: org

# Set creator org vars
- name: Set creator org vars
  set_fact:
    creator_msp: "{{ peer.name | lower }}MSP"
    creator_ca: "{{ peer.name | lower }}-ca"
    creator_admin: "{{ peer.name | lower }}-admin"
    creator_namespace: "{{ peer.name | lower }}-net"

# Create channel
- name: "Create channel via operator"
  include_role:
    name: k8_component
  loop: "{{ network | json_query(org_query) }}"
  loop_control:
    loop_var: org
  vars:
    org_query: "organizations[?name=='{{peer.name}}']"
    name: "{{ org.name | lower }}"
    type: "operator_mainchannel"
    component_type: "channel"
    channel_name: "{{ item.channel_name | lower }}"
    component_type_name: "{{ org.name | lower }}"
    component_ns: "{{ peer.name | lower }}-net"
    release_dir: "./build"
    kubernetes: "{{ org.k8s }}"
