##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

##############################################################################################
# This role creates configtx.yaml file which is consumed by configtxgen tool
##############################################################################################

##############################################################################################
# Create the configtx.yaml file as the requirements mentioned in network.yaml 
# file. The configtx.yaml file is consumed by the configtxgen binary to generate the 
# genesis block and channels.
##############################################################################################

# Create the build directory if it does not exist
- name: Create build directory if it does not exist
  file:
    path: "./build"
    state: directory

# Remove old configtx file
- name: "Remove old configtx file"
  file:
    path: "{{ config_file }}"
    state: absent

# The tasks add the required data patch by patch to the configtx.yaml file to generate it.
- name: "create configtx.yaml file"
  file:
    path: "{{ config_file }}"
    state: touch

# Copy custom files if present
- name: "Copy custom files if present"
  copy:
    src: "{{ network.configtx.folder_path }}"
    dest: ./roles/create/configtx/templates
  when: network.configtx is defined and network.configtx.custom == true

# Checking if custom init patch to configtx.yaml exists
- name: "Checking if custom init patch to configtx.yaml exists"
  stat:
    path: "{{ network.configtx.folder_path }}configtxinit_custom.tpl"
  register: cfinit
  when: network.configtx is defined and network.configtx.custom == true

# Add init patch to configtx.yaml
- name: "Adding init patch to configtx.yaml"
  blockinfile:
    dest: "{{ config_file }}"
    block: "{{ lookup('template', filename) }}"
    marker: "#"
  vars:
    consensus: "{{ org.services.consensus }}"
    org_query: "organizations[?type=='orderer']"
    org: "{{ network | json_query(org_query) | first }}"
    filename: configtxinit_{{ 'custom' if network.configtx is defined and network.configtx.custom == true and cfinit.stat.exists else 'default' }}.tpl

# Check if custom init patch to configtx.yaml exists
- name: "Checking if custom init patch to configtx.yaml exists"
  stat:
    path: "{{ network.configtx.folder_path }}configtxOrg_custom.tpl"
  register: cforg
  when: network.configtx is defined and network.configtx.custom == true

# Add organization patch to configtx.yaml
- name: "Adding organization patch to configtx.yaml"
  blockinfile:
    dest: "{{ config_file }}"
    block: "{{ lookup('template', filename) }}"
    marker: "#"
  vars:    
    component_name: "{{ item.name }}"
    component_ns: "{{ item.name | lower }}-net"
    component_type: "{{ item.type | lower }}"
    orderers: "{{ network.orderers }}"
    provider: "{{ network.env.proxy }}"
    filename: configtxOrg_{{ 'custom' if network.configtx is defined and network.configtx.custom == true and cforg.stat.exists else 'default' }}.tpl
  loop: "{{ network['organizations'] }}"

# Check if custom init patch to configtx.yaml exists
- name: "Checking if custom init patch to configtx.yaml exists"
  stat:
    path: "{{ network.configtx.folder_path }}configtxOrderer_custom.tpl"
  register: cford
  when: network.configtx is defined and network.configtx.custom == true

# Add orderer patch to configtx.yaml
- name: "Adding orderer patch to configtx.yaml"
  blockinfile:
    dest: "{{ config_file }}"
    block: "{{ lookup('template', filename) }}"
    marker: "#"
  vars:
    orderers: "{{ network.orderers }}"
    consensus: "{{ network.consensus }}"
    provider: "{{ network.env.proxy }}"
    filename: configtxOrderer_{{ 'custom' if network.configtx is defined and network.configtx.custom == true and cford.stat.exists else 'default' }}.tpl

# Check if custom init patch to configtx.yaml exists
- name: "Checking if custom init patch to configtx.yaml exists"
  stat:
    path: "{{ network.configtx.folder_path }}configtxProfile_custom.tpl"
  register: cfprofile
  when: network.configtx is defined and network.configtx.custom == true

# Add profile patch to configtx.yaml
- name: "Adding profile patch to configtx.yaml"
  blockinfile:
    dest: "{{ config_file }}"
    block: "{{ lookup('template', filename) }}"
    marker: "#"
  vars:
    orderers: "{{ network.orderers }}"
    consensus: "{{ network.consensus }}"
    provider: "{{ network.env.proxy }}"
    filename: configtxProfile_{{ 'custom' if network.configtx is defined and network.configtx.custom == true and cfprofile.stat.exists else 'default' }}.tpl
  when: network.channels is defined

# Display configtx file contents
- name: Display configtx file contents
  debug: 
    msg: "The configtx file is: {{ lookup('file', './build/configtx.yaml') }}"
