##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

############################################################################################

# Find old .json files
- name: Find .json files
  find:
    paths: "{{ playbook_dir }}/../../../{{ org.gitops.chart_source }}/fabric-genesis/files"
    patterns: "*.json"
  register: json_files

# Delete old .json files
- name: Delete .json files
  file:
    path: "{{ item.path }}"
    state: absent
  loop: "{{ json_files.files }}"

# Remove all Helm releases of organization except genesis
- name: Delete Helm releases
  kubernetes.core.helm:
    kubeconfig: "{{ kubernetes.config_file }}"
    name: "genesis"
    release_namespace: "{{ org.name | lower }}-net"
    state: absent
  when: genererate_configtx is defined and genererate_configtx == 'true'

# Fetch peers cetificates
- name: Fetch peers cetificates
  include_tasks: get_certificates.yaml
  vars:
    charts_dir: "{{ org.gitops.chart_source }}"
    org_name: "{{ organization.name | lower }}"
    peers: "{{ organization.services.peers }}"
  loop: "{{ network['organizations'] }}"
  loop_control:
    loop_var: organization
  when: 
    - organization.services.peers is defined and organization.services.peers | length > 0
    - organization.name != org.name

# Get channel_name
- name: Get channel_name
  include_tasks: get_channel_creator.yaml
  vars:
    channel_orgs: "{{ channel.orderers}}"
  loop: "{{ network['channels'] }}"
  loop_control:
    loop_var: channel

# Check or wait for the join channel job to complete
- name: "waiting for genesis"
  include_role:
    name: "{{ playbook_dir }}/../../shared/configuration/roles/check/helm_component"
  vars:
    component_type: "Job"
    namespace: "{{ org.name | lower }}-net"
    component_name: "genesis"
