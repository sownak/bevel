##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

metadata:
  #Provide the namespace for CA server
  #Eg. namespace: org1-net
  namespace: org1-net
  images:
    #Provide the valid image name and version for fabric ca
    #Eg. ca: hyperledger/fabric-ca:1.4.8
    ca: ghcr.io/hyperledger/bevel-fabric-ca:1.4.8
    #Provide the valid image name and version to read certificates from vault server
    #Eg.alpineutils: ghcr.io/hyperledger/bevel-alpine:latest
    alpineutils: ghcr.io/hyperledger/bevel-alpine:latest
  #Provide the custom labels
  #NOTE: Provide labels other than name, release name , release service, chart version , chart name , run.
  #Eg. labels:
  #      role: ca
  labels: 

deployment:
  annotations: 

server:
  #Provide name for ca server deployment
  #Eg. name: ca
  name: ca
  #Provide the value for tlsstatus to be true or false for  deployment
  #Eg. tlsstatus: true
  tlsstatus: true
  #Provide the admin name for CA server
  #Eg. admin: admin
  admin: admin
  # Provide the path for Fabric CA Server Config
  # Eg. configpath: conf/ca-config-default.yaml
  configpath: conf/ca-config-default.yaml

storage:
  #Provide the storageclassname for CA
  #Eg. storageclassname: aws-storageclass
  storageclassname: aws-storageclass
  #Provide the storagesize for CA
  #Eg. storagesize: 512Mi
  storagesize: 512Mi

vault:
  #Provide the vault server address
  #Eg. vaultaddress: http://Vault-884963190.eu-west-1.elb.amazonaws.com
  address:
  #Provide the vaultrole for  deployment
  #Eg. vaultrole: vault-role
  role: vault-role
  #Provide the kubernetes auth backend configured in vault for CA server
  #Eg. authpath: fra-demo-hlkube-cluster-cluster
  authpath: devorg1-net-auth
  #Provide the secretcert path configured in vault for CA server
  #Eg. secretcert: secretsv2/data/crypto/Organizations/.../...-cert.pem
  secretcert: secretsv2/data/crypto/peerOrganizations/org1-net/ca?ca.org1-net-cert.pem
  #Provide the secretkey path configured in vault for CA server
  #Eg. secretkey: secretsv2/data/crypto/Organizations/.../...-CA.key
  secretkey: secretsv2/data/crypto/peerOrganizations/org1-net/ca?org1-net-CA.key
  # Provide the secret path for admin password configured in vault for CA server
  # Eg. secretadminpass: secretsv2/data/credentials/.../.../ca/org1?user
  secretadminpass: secretsv2/data/credentials/org1-net/ca/org1?user
  #Provide the serviceaccountname for vault
  #Eg. serviceaccountname: vault-auth
  serviceaccountname: vault-auth
  #Provide the type of vault
  #Eg. type: hashicorp
  type: hashicorp
  #Provide the imagesecretname for vault
  #Eg. imagesecretname: regcred
  imagesecretname: ""
  #Enable or disable TLS for vault communication
  #Eg. tls: true
  tls: 
  #kuberenetes secret for vault ca.cert
  #Eg. tlssecret: vaultca
  tlssecret: vaultca


service:
  #Provide service type for the pod
  #Eg. servicetype: NodePort
  servicetype: ClusterIP
  ports:
    tcp:
      #Provide tcp node port to be exposed for ca server
      #Eg. nodeport: 30007
      nodeport: 
      #Provide tcp cluster IP port to be exposed for ca server
      #Eg. clusteripport: 7054
      clusteripport: 7054

annotations:
  # Extra annotations for the service
  service: []
  # Extra annotations for the PVC
  pvc: []
  
proxy:
  #This will be the proxy/ingress provider. Can have values "haproxy" or "none"
  #Eg. provider: "haproxy"
  provider: haproxy
  #Type can be "orderer" or "peer"; "test" is defaulted
  #Eg. type: orderer
  type: test
  #This field specifies the external url for the organization
  #Eg. external_url_suffix: org1proxy.blockchaincloudpoc.com
  external_url_suffix: org1proxy.blockchaincloudpoc.com
